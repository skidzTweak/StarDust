<?include("settings/stardust.php");$tx = $_GET[tx];$st = $_GET[st];$amt = $_GET[amt];$cc = $_GET[cc];$cm = $_GET[cm];$item_number = $_GET[item_number];function Problem($message, $otherData){	$date_arr = getdate();	$date = "$date_arr[mday].$date_arr[mon].$date_arr[year]";	$sendto = $incompletePurchaseEmailandErrors;	$subject = "Currency Issue";	$body .= "There was a issue with a currency Purchase:\n";	$body .= $message . "\n";	$body .= $otherData . "\n";	$header = "From: " . SYSMAIL . "\r\n";	$mail_status = mail($sendto, $subject, $body, $header);}// read the post from PayPal system and add 'cmd'$req = 'cmd=_notify-synch';$tx_token = $_GET['tx'];if ($tx_token != ""){		$req .= "&tx=$tx_token&at=$auth_token";	// post back to PayPal system to validate	$header .= "POST /cgi-bin/webscr HTTP/1.0\r\n";	$header .= "Content-Type: application/x-www-form-urlencoded\r\n";	$header .= "Content-Length: " . strlen($req) . "\r\n\r\n";	$fp = fsockopen ($payPalURL, 80, $errno, $errstr, 30);	// If possible, securely post back to paypal using HTTPS	// Your PHP server will need to be SSL enabled	// $fp = fsockopen ('ssl://www.paypal.com', 443, $errno, $errstr, 30);	if (!$fp) 	{		Problem("PayPal Did not respond. Recommended they refresh the page. Comms error with paypal.", $tx);		?>		<table>			<tr>				<td>Sorry, issue with paypal. It didn't respond. Try reloading this page by pressing F5.</td>			</tr>		</table>		<?			} else {		fputs ($fp, $header . $req);		$res = '';		$headerdone = false;		while (!feof($fp)) {			$line = fgets ($fp, 1024);			if (strcmp($line, "\r\n") == 0) {				$headerdone = true;			}			else if ($headerdone)			{				$res .= $line;			}		}		$lines = explode("\n", $res);		$keyarray = array();		if (strcmp ($lines[0], "SUCCESS") == 0) {			for ($i=1; $i<count($lines);$i++){				list($key,$val) = explode("=", $lines[$i]);				$keyarray[urldecode($key)] = urldecode($val);			}			$paymentstatus = $keyarray['payment_status'];			$firstname = $keyarray['first_name'];			$lastname = $keyarray['last_name'];			$itemname = $keyarray['item_name'];			$amount = $keyarray['payment_gross'];						$purchaseId = $keyarray['custom'];			// echo ("Purchase id = $purchaseId");			$DbLink->query("SELECT PurchaseID, PrincipalID, UserName, Amount, ConversionFactor, RegionName, RegionID, RegionPos, Complete, CompleteMethod, CompleteReference, TransactionID, Created, Updated from usercurrency_purchased where PurchaseID = '$purchaseId'");			if ($DbLink->num_rows() > 0)			{				list($PurchaseID, $PrincipalID, $UserName, $Amount, $ConversionFactor, $RegionName, $RegionID, $RegionPos, $Complete, $CompleteMethod, $CompleteReference, $TransactionID, $Created, $Updated) = $DbLink->next_record();								// echo ("paymentstatus = $paymentstatus");				// echo ("Complete = $Complete");								if (($paymentstatus == 'Completed') && ($Complete == 0))				{					// echo ("PrincipalID = $PrincipalID");					$DbLink->query("SELECT Amount FROM usercurrency WHERE PrincipalID = '$PrincipalID'");					list($UserAmount) = $DbLink->next_record();					// echo ("User currency = $UserAmount");										$DbLink->query("SELECT Amount FROM usercurrency WHERE PrincipalID = '$banker_id'");					list($BankerAmount) = $DbLink->next_record();										if ($BankerAmount >= $Amount)					{									$DbLink->query("UPDATE usercurrency_purchased SET Complete = 1, Updated = " . mktime() . " WHERE PurchaseID = '$purchaseId'");						$transaction_id = generateGuid();						$DbLink->query("INSERT INTO usercurrency_history SET 							TransactionID = '$transaction_id', 							Description = 'Currency Purchased',							FromPrincipalID = '$banker_id',							FromName = 'Banker',							ToName = '$UserName',							ToPrincipalID = '$PrincipalID',							Amount = $Amount,							Complete = 0,							RegionName = '$RegionName',							RegionID = '$RegionID',							RegionPos = '$RegionPos',							Created = " . mktime() . ",							Updated = " . mktime() . ",							ToBalance = 0,							FromBalance = 0");						$BankerAmount = $BankerAmount - $Amount;						$DbLink->query("UPDATE usercurrency SET Amount = $BankerAmount WHERE PrincipalID = '$banker_id'");							$UserAmount = $UserAmount + $Amount;						$DbLink->query("UPDATE usercurrency SET Amount = $UserAmount WHERE PrincipalID = '$PrincipalID'");													$DbLink->query("UPDATE usercurrency_history SET 							ToBalance = $UserAmount, 							FromBalance = $BankerAmount,							Complete = 1,							Updated = " . mktime() . "							WHERE TransactionID = '$transaction_id'							");						$DbLink->query("UPDATE usercurrency_purchased SET TransactionID = '$transaction_id', Complete = 1, CompleteMethod = 'PayPal', CompleteReference = '" . $keyarray['txn_id'] . "', raw_paypal_transaction_data = '" . $res . "', Updated = " . mktime() . " WHERE PurchaseID = '$purchaseId'");						echo ("<p><h3>Thank you for your purchase! Your purchase should be applied.</h3></p>");						echo ("<b>Payment Details</b><br>\n");						echo ("<li>Name: $firstname $lastname</li>\n");						echo ("<li>User: $UserName</li>\n");						echo ("<li>Item: $itemname</li>\n");						echo ("<li>Amount: $amount</li>\n");						echo ("<li>G$: $Amount</li>\n");						echo ("You may need to relog in order to see the currency applied. Your balance is now $UserAmount.");						$_Session[purchase_id] = "";					}					else					{						$DbLink->query("UPDATE usercurrency_purchased SET CompleteMethod = 'Banker was out of money', TransactionID = '$transaction_id', Complete = 0, CompleteMethod = 'PayPal', CompleteReference = '" . $keyarray['txn_id'] . "', raw_paypal_transaction_data = '" . $res . "', Updated = " . mktime() . " WHERE PurchaseID = '$purchaseId'");						Problem("The Banker was out of money", $res);								?>						<table>							<tr>								<td>There appears that there was a issue with your purchase. An Email has been sent to all Three Stooges and we will ensure this is fixed as soon as possible.</td>							</tr>						</table>						<?					}				}				else				{					if ($Complete == 0)					{						?>						<table>							<tr>								<td>This Transaction already appears to be complete. If you are having issues please email wendellthor@yahoo.com</td>							</tr>						</table>						<?					}					else					{						$DbLink->query("UPDATE usercurrency_purchased SET CompleteMethod = 'PayPal Transaction was not complete', TransactionID = '$transaction_id', Complete = 0, CompleteMethod = 'PayPal', CompleteReference = '" . $keyarray['txn_id'] . "', raw_paypal_transaction_data = '" . $res . "', Updated = " . mktime() . " WHERE PurchaseID = '$purchaseId'");						Problem("PayPal Transaction was not complete", $res);						?>						<table>							<tr>								<td>There appears that there was a issue with your purchase. An Email has been sent to all Three Stooges and we will ensure this is fixed as soon as possible.</td>							</tr>						</table>						<?					}				}			}			else			{				$DbLink->query("SELECT order_complete, name from region_purchases where purchase_id = '$purchaseId'");				if ($DbLink->num_rows() > 0)				{					list($order_complete, $nameOfRegion) = $DbLink->next_record();					$DbLink->query("UPDATE region_purchases SET order_complete = 1, paypal_raw = '" . $res . "', complete_reference = '" . $keyarray['txn_id'] . "' where purchase_id = '$purchaseId'");					echo ("<p><h3>Thank you for your purchase! Your region should be up within 2 business days. </h3></p>");					echo ("<b>Payment Details</b><br>\n");					echo ("<li>Name: $firstname $lastname</li>\n");					echo ("<li>Item: $itemname</li>\n");					echo ("<li>Amount: $amount</li>\n");					echo ("<li>Region Name: $nameOfRegion</li>\n");					echo ("You will recieve an email when your region is up.");				}				else				{					Problem("Prurchase ID not found :(" . $_SESSION[USERID], $tx);					?>					<table>						<tr>							<td>There appears that there was a issue with your purchase. An Email has been sent to all Three Stooges and we will ensure this is fixed as soon as possible.</td>						</tr>					</table>					<?				}			}		}		else if (strcmp ($lines[0], "FAIL") == 0) {			Problem("Transaction Failed for unknow reason.", $tx);			?>			<table>				<tr>					<td>This transaction failed for unknow reasons.</td>				</tr>			</table>			<?		}	}	fclose ($fp);}else{?>Page 404<?}?>